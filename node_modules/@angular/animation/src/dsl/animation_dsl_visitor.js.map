{"version":3,"sources":["../../../../../modules/@angular/animation/src/dsl/animation_dsl_visitor.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AACH,OAAO,KAAK,IAAA,MAAA,sBAAA,CAAA;AAWZ;;;;;GAKG;AACH,MALC,6BAMG,OAA4B,EAAE,IAA4B,EAAE,OAAY;IAC1E,MAAM,CAAC,CAAC,IALC,CAAI,IAAC,CAAI,CAAC,CAAA;QAMjB,KALK,aAA4B;YAM/B,MAAM,CALC,OAAA,CAAQ,UAAC,CAAU,gBAAA,CAAA,CAA6B,IAAC,CAAA,EAAK,OAAA,CAAQ,CAAC;QAMxE,KALK,kBAA4B;YAM/B,MAAM,CALC,OAAA,CAAQ,eAAC,CAAe,gBAAA,CAAA,CAAkC,IAAC,CAAA,EAAK,OAAA,CAAQ,CAAC;QAMlF,KALK,gBAA4B;YAM/B,MAAM,CALC,OAAA,CAAQ,aAAC,CAAa,gBAAA,CAAA,CAAgC,IAAC,CAAA,EAAK,OAAA,CAAQ,CAAC;QAM9E,KALK,aAA4B;YAM/B,MAAM,CALC,OAAA,CAAQ,UAAC,CAAU,gBAAA,CAAA,CAA6B,IAAC,CAAA,EAAK,OAAA,CAAQ,CAAC;QAMxE,KALK,eAA4B;YAM/B,MAAM,CALC,OAAA,CAAQ,YAAC,CAAY,gBAAA,CAAA,CAA+B,IAAC,CAAA,EAAK,OAAA,CAAQ,CAAC;QAM5E,KALK,wBAA4B;YAM/B,MAAM,CALC,OAAA,CAAQ,qBAAC,CAAqB,gBAAA,CAAA,CAAyC,IAAC,CAAA,EAAK,OAAA,CAAQ,CAAC;QAM/F,KALK,aAA4B;YAM/B,MAAM,CALC,OAAA,CAAQ,UAAC,CAAU,gBAAA,CAAA,CAA6B,IAAC,CAAA,EAAK,OAAA,CAAQ,CAAC;QAMxE;YACE,MALM,IAAI,KAAA,CAAM,gDAAC,IAA8C,CAAI,IAAK,CAAE,CAAC;IAM/E,CAAC;AACH,CAAC","file":"animation_dsl_visitor.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as meta from './animation_metadata';\n\nexport interface AnimationDslVisitor {\n  visitState(ast: meta.AnimationStateMetadata, context: any): any;\n  visitTransition(ast: meta.AnimationTransitionMetadata, context: any): any;\n  visitSequence(ast: meta.AnimationSequenceMetadata, context: any): any;\n  visitGroup(ast: meta.AnimationGroupMetadata, context: any): any;\n  visitAnimate(ast: meta.AnimationAnimateMetadata, context: any): any;\n  visitStyle(ast: meta.AnimationStyleMetadata, context: any): any;\n  visitKeyframeSequence(ast: meta.AnimationKeyframesSequenceMetadata, context: any): any;\n}\n/**\n * @param {?} visitor\n * @param {?} node\n * @param {?} context\n * @return {?}\n */\nexport function visitAnimationNode(\n    visitor: AnimationDslVisitor, node: meta.AnimationMetadata, context: any) {\n  switch (node.type) {\n    case meta.AnimationMetadataType.State:\n      return visitor.visitState( /** @type {?} */((<meta.AnimationStateMetadata>node)), context);\n    case meta.AnimationMetadataType.Transition:\n      return visitor.visitTransition( /** @type {?} */((<meta.AnimationTransitionMetadata>node)), context);\n    case meta.AnimationMetadataType.Sequence:\n      return visitor.visitSequence( /** @type {?} */((<meta.AnimationSequenceMetadata>node)), context);\n    case meta.AnimationMetadataType.Group:\n      return visitor.visitGroup( /** @type {?} */((<meta.AnimationGroupMetadata>node)), context);\n    case meta.AnimationMetadataType.Animate:\n      return visitor.visitAnimate( /** @type {?} */((<meta.AnimationAnimateMetadata>node)), context);\n    case meta.AnimationMetadataType.KeyframeSequence:\n      return visitor.visitKeyframeSequence( /** @type {?} */((<meta.AnimationKeyframesSequenceMetadata>node)), context);\n    case meta.AnimationMetadataType.Style:\n      return visitor.visitStyle( /** @type {?} */((<meta.AnimationStyleMetadata>node)), context);\n    default:\n      throw new Error(`Unable to resolve animation metadata node #${node.type}`);\n  }\n}\n"]}