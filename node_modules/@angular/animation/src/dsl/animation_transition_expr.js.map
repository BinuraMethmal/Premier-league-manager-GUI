{"version":3,"sources":["../../../../../modules/@angular/animation/src/dsl/animation_transition_expr.ts"],"names":[],"mappings":"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","file":"animation_transition_expr.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport const /** @type {?} */ ANY_STATE = '*';\nexport declare type TransitionMatcherFn = (fromState: any, toState: any) => boolean;\n/**\n * @param {?} transitionValue\n * @param {?} errors\n * @return {?}\n */\nexport function parseTransitionExpr(\n    transitionValue: string | TransitionMatcherFn, errors: string[]): TransitionMatcherFn[] {\n  const /** @type {?} */ expressions: TransitionMatcherFn[] = [];\n  if (typeof transitionValue == 'string') {\n    ( /** @type {?} */((<string>transitionValue)))\n        .split(/\\s*,\\s*/)\n        .forEach(str => parseInnerTransitionStr(str, expressions, errors));\n  } else {\n    expressions.push( /** @type {?} */((<TransitionMatcherFn>transitionValue)));\n  }\n  return expressions;\n}\n/**\n * @param {?} eventStr\n * @param {?} expressions\n * @param {?} errors\n * @return {?}\n */\nfunction parseInnerTransitionStr(\n    eventStr: string, expressions: TransitionMatcherFn[], errors: string[]) {\n  if (eventStr[0] == ':') {\n    eventStr = parseAnimationAlias(eventStr, errors);\n  }\n  const /** @type {?} */ match = eventStr.match(/^(\\*|[-\\w]+)\\s*(<?[=-]>)\\s*(\\*|[-\\w]+)$/);\n  if (match == null || match.length < 4) {\n    errors.push(`The provided transition expression \"${eventStr}\" is not supported`);\n    return expressions;\n  }\n\n  const /** @type {?} */ fromState = match[1];\n  const /** @type {?} */ separator = match[2];\n  const /** @type {?} */ toState = match[3];\n  expressions.push(makeLambdaFromStates(fromState, toState));\n\n  const /** @type {?} */ isFullAnyStateExpr = fromState == ANY_STATE && toState == ANY_STATE;\n  if (separator[0] == '<' && !isFullAnyStateExpr) {\n    expressions.push(makeLambdaFromStates(toState, fromState));\n  }\n}\n/**\n * @param {?} alias\n * @param {?} errors\n * @return {?}\n */\nfunction parseAnimationAlias(alias: string, errors: string[]): string {\n  switch (alias) {\n    case ':enter':\n      return 'void => *';\n    case ':leave':\n      return '* => void';\n    default:\n      errors.push(`The transition alias value \"${alias}\" is not supported`);\n      return '* => *';\n  }\n}\n/**\n * @param {?} lhs\n * @param {?} rhs\n * @return {?}\n */\nfunction makeLambdaFromStates(lhs: string, rhs: string): TransitionMatcherFn {\n  return (fromState: any, toState: any): boolean => {\n    const /** @type {?} */ lhsMatch = lhs == ANY_STATE || lhs == fromState;\n    const /** @type {?} */ rhsMatch = rhs == ANY_STATE || rhs == toState;\n    return lhsMatch && rhsMatch;\n  };\n}\n"]}