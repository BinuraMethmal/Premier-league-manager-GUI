{"version":3,"sources":["../../../../../modules/@angular/animation/src/dsl/animation_validator_visitor.ts"],"names":[],"mappings":"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","file":"animation_validator_visitor.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {AnimationStyles} from '@angular/core';\nimport {normalizeStyles, parseTimeExpression} from '../common/util';\nimport {AnimationDslVisitor, visitAnimationNode} from './animation_dsl_visitor';\nimport * as meta from './animation_metadata';\n\nexport type StyleTimeTuple = {\n  startTime: number; endTime: number;\n};\n/**\n * @param {?} ast\n * @return {?}\n */\nexport function validateAnimationSequence(ast: meta.AnimationMetadata) {\n  return new AnimationValidatorVisitor().validate(ast);\n}\nexport class AnimationValidatorVisitor implements AnimationDslVisitor {\n/**\n * @param {?} ast\n * @return {?}\n */\nvalidate(ast: meta.AnimationMetadata): string[] {\n    const /** @type {?} */ context = new AnimationValidatorContext();\n    visitAnimationNode(this, ast, context);\n    return context.errors;\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitState(ast: meta.AnimationStateMetadata, context: any): any {}\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitTransition(ast: meta.AnimationTransitionMetadata, context: any): any {}\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitSequence(ast: meta.AnimationSequenceMetadata, context: AnimationValidatorContext): any {\n    ast.steps.forEach(step => visitAnimationNode(this, step, context));\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitGroup(ast: meta.AnimationGroupMetadata, context: AnimationValidatorContext): any {\n    const /** @type {?} */ currentTime = context.currentTime;\n    let /** @type {?} */ furthestTime = 0;\n    ast.steps.forEach(step => {\n      context.currentTime = currentTime;\n      visitAnimationNode(this, step, context);\n      furthestTime = Math.max(furthestTime, context.currentTime);\n    });\n    context.currentTime = furthestTime;\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitAnimate(ast: meta.AnimationAnimateMetadata, context: AnimationValidatorContext): any {\n    // we reassign the timings here so that they are not reparsed each\n    // time an animation occurs\n    context.currentAnimateTimings = ast.timings =\n        parseTimeExpression( /** @type {?} */((<string|number>ast.timings)), context.errors);\n\n    const /** @type {?} */ astType = ast.styles && ast.styles.type;\n    if (astType == meta.AnimationMetadataType.KeyframeSequence) {\n      this.visitKeyframeSequence( /** @type {?} */((<meta.AnimationKeyframesSequenceMetadata>ast.styles)), context);\n    } else {\n      context.currentTime +=\n          context.currentAnimateTimings.duration + context.currentAnimateTimings.delay;\n      if (astType == meta.AnimationMetadataType.Style) {\n        this.visitStyle( /** @type {?} */((<meta.AnimationStyleMetadata>ast.styles)), context);\n      }\n    }\n\n    context.currentAnimateTimings = null;\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitStyle(ast: meta.AnimationStyleMetadata, context: AnimationValidatorContext): any {\n    const /** @type {?} */ styleData = normalizeStyles(new AnimationStyles(ast.styles));\n    const /** @type {?} */ timings = context.currentAnimateTimings;\n    let /** @type {?} */ endTime = context.currentTime;\n    let /** @type {?} */ startTime = context.currentTime;\n    if (timings && startTime > 0) {\n      startTime -= timings.duration + timings.delay;\n    }\n    Object.keys(styleData).forEach(prop => {\n      const /** @type {?} */ collectedEntry = context.collectedStyles[prop];\n      let /** @type {?} */ updateCollectedStyle = true;\n      if (collectedEntry) {\n        if (startTime != endTime && startTime >= collectedEntry.startTime &&\n            endTime <= collectedEntry.endTime) {\n          context.errors.push(\n              `The CSS property \"${prop}\" that exists between the times of \"${collectedEntry.startTime}ms\" and \"${collectedEntry.endTime}ms\" is also being animated in a parallel animation between the times of \"${startTime}ms\" and \"${endTime}ms\"`);\n          updateCollectedStyle = false;\n        }\n\n        // we always choose the smaller start time value since we\n        // want to have a record of the entire animation window where\n        // the style property is being animated in between\n        startTime = collectedEntry.startTime;\n      }\n      if (updateCollectedStyle) {\n        context.collectedStyles[prop] = {startTime, endTime};\n      }\n    });\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitKeyframeSequence(\n      ast: meta.AnimationKeyframesSequenceMetadata, context: AnimationValidatorContext): any {\n    let /** @type {?} */ totalKeyframesWithOffsets = 0;\n    const /** @type {?} */ offsets: number[] = [];\n    let /** @type {?} */ offsetsOutOfOrder = false;\n    let /** @type {?} */ keyframesOutOfRange = false;\n    let /** @type {?} */ previousOffset: number = 0;\n    ast.steps.forEach(step => {\n      const /** @type {?} */ styleData = normalizeStyles(new AnimationStyles(step.styles));\n      let /** @type {?} */ offset = 0;\n      if (styleData.hasOwnProperty('offset')) {\n        totalKeyframesWithOffsets++;\n        offset = /** @type {?} */(( <number>styleData['offset']));\n      }\n      keyframesOutOfRange = keyframesOutOfRange || offset < 0 || offset > 1;\n      offsetsOutOfOrder = offsetsOutOfOrder || offset < previousOffset;\n      previousOffset = offset;\n      offsets.push(offset);\n    });\n\n    if (keyframesOutOfRange) {\n      context.errors.push(`Please ensure that all keyframe offsets are between 0 and 1`);\n    }\n\n    if (offsetsOutOfOrder) {\n      context.errors.push(`Please ensure that all keyframe offsets are in order`);\n    }\n\n    const /** @type {?} */ length = ast.steps.length;\n    let /** @type {?} */ generatedOffset = 0;\n    if (totalKeyframesWithOffsets > 0 && totalKeyframesWithOffsets < length) {\n      context.errors.push(`Not all style() steps within the declared keyframes() contain offsets`);\n    } else if (totalKeyframesWithOffsets == 0) {\n      generatedOffset = 1 / length;\n    }\n\n    const /** @type {?} */ limit = length - 1;\n    const /** @type {?} */ currentTime = context.currentTime;\n    const /** @type {?} */ animateDuration = context.currentAnimateTimings.duration;\n    ast.steps.forEach((step, i) => {\n      const /** @type {?} */ offset = generatedOffset > 0 ? (i == limit ? 1 : (generatedOffset * i)) : offsets[i];\n      const /** @type {?} */ durationUpToThisFrame = offset * animateDuration;\n      context.currentTime =\n          currentTime + context.currentAnimateTimings.delay + durationUpToThisFrame;\n      context.currentAnimateTimings.duration = durationUpToThisFrame;\n      this.visitStyle(step, context);\n    });\n  }\n}\nexport class AnimationValidatorContext {\npublic errors: string[] = [];\npublic currentTime: number = 0;\npublic currentAnimateTimings: meta.AnimateTimings;\npublic collectedStyles: {[propName: string]: StyleTimeTuple} = {};\n}\n\nfunction AnimationValidatorContext_tsickle_Closure_declarations() {\n/** @type {?} */\nAnimationValidatorContext.prototype.errors;\n/** @type {?} */\nAnimationValidatorContext.prototype.currentTime;\n/** @type {?} */\nAnimationValidatorContext.prototype.currentAnimateTimings;\n/** @type {?} */\nAnimationValidatorContext.prototype.collectedStyles;\n}\n\n"]}