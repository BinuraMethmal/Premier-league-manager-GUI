{"version":3,"sources":["../../../../../modules/@angular/animation/src/dsl/animation_timeline_visitor.ts"],"names":[],"mappings":"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","file":"animation_timeline_visitor.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {AnimationStyles} from '@angular/core';\nimport {StyleData} from '../common/style_data';\nimport {copyStyles, normalizeStyles, parseTimeExpression} from '../common/util';\nimport {AnimationDslVisitor, visitAnimationNode} from './animation_dsl_visitor';\nimport * as meta from './animation_metadata';\nimport {AnimationTimelineInstruction, createTimelineInstruction} from './animation_timeline_instruction';\n/**\n * @param {?} ast\n * @param {?=} startingStyles\n * @param {?=} finalStyles\n * @return {?}\n */\nexport function buildAnimationKeyframes(\n    ast: meta.AnimationMetadata | meta.AnimationMetadata[], startingStyles: StyleData = {},\n    finalStyles: StyleData = {}): AnimationTimelineInstruction[] {\n  const /** @type {?} */ normalizedAst = Array.isArray(ast) ? meta.sequence( /** @type {?} */((<meta.AnimationMetadata[]>ast))) : /** @type {?} */((\n                                             <meta.AnimationMetadata>ast));\n  return new AnimationTimelineVisitor().buildKeyframes(normalizedAst, startingStyles, finalStyles);\n}\n\nexport declare type StyleAtTime = {\n  time: number; value: string | number;\n};\nexport class AnimationTimelineContext {\n  currentTimeline: TimelineBuilder;\n  currentAnimateTimings: meta.AnimateTimings;\n  previousNode: meta.AnimationMetadata = /** @type {?} */(( <meta.AnimationMetadata>{}));\n  subContextCount = 0;\n/**\n * @param {?} errors\n * @param {?} timelines\n * @param {?=} initialTimeline\n */\nconstructor(\npublic errors: any[],\npublic timelines: TimelineBuilder[],\n      initialTimeline: TimelineBuilder = null) {\n    this.currentTimeline = initialTimeline || new TimelineBuilder(0);\n    timelines.push(this.currentTimeline);\n  }\n/**\n * @return {?}\n */\ncreateSubContext(): AnimationTimelineContext {\n    const /** @type {?} */ context =\n        new AnimationTimelineContext(this.errors, this.timelines, this.currentTimeline.fork());\n    context.previousNode = this.previousNode;\n    context.currentAnimateTimings = this.currentAnimateTimings;\n    this.subContextCount++;\n    return context;\n  }\n/**\n * @param {?=} newTime\n * @return {?}\n */\ntransformIntoNewTimeline(newTime = 0) {\n    this.currentTimeline = this.currentTimeline.fork(newTime);\n    this.timelines.push(this.currentTimeline);\n    return this.currentTimeline;\n  }\n/**\n * @param {?} time\n * @return {?}\n */\nincrementTime(time: number) {\n    this.currentTimeline.forwardTime(this.currentTimeline.duration + time);\n  }\n}\n\nfunction AnimationTimelineContext_tsickle_Closure_declarations() {\n/** @type {?} */\nAnimationTimelineContext.prototype.currentTimeline;\n/** @type {?} */\nAnimationTimelineContext.prototype.currentAnimateTimings;\n/** @type {?} */\nAnimationTimelineContext.prototype.previousNode;\n/** @type {?} */\nAnimationTimelineContext.prototype.subContextCount;\n/** @type {?} */\nAnimationTimelineContext.prototype.errors;\n/** @type {?} */\nAnimationTimelineContext.prototype.timelines;\n}\n\nexport class AnimationTimelineVisitor implements AnimationDslVisitor {\n/**\n * @param {?} ast\n * @param {?} startingStyles\n * @param {?} finalStyles\n * @return {?}\n */\nbuildKeyframes(ast: meta.AnimationMetadata, startingStyles: StyleData, finalStyles: StyleData):\n      AnimationTimelineInstruction[] {\n    const /** @type {?} */ context = new AnimationTimelineContext([], []);\n    context.currentTimeline.setStyles(startingStyles);\n\n    visitAnimationNode(this, ast, context);\n    const /** @type {?} */ normalizedFinalStyles = copyStyles(finalStyles, true);\n\n    // this is a special case for when animate(TIME) is used (without any styles)\n    // thus indicating to create an animation arc between the final keyframe and\n    // the destination styles. When this occurs we need to ensure that the styles\n    // that are missing on the finalStyles map are set to AUTO\n    if (Object.keys(context.currentTimeline.getFinalKeyframe()).length == 0) {\n      context.currentTimeline.properties.forEach(prop => {\n        const /** @type {?} */ val = normalizedFinalStyles[prop];\n        if (val == null) {\n          normalizedFinalStyles[prop] = meta.AUTO_STYLE;\n        }\n      });\n    }\n\n    context.currentTimeline.setStyles(normalizedFinalStyles);\n    const /** @type {?} */ timelineInstructions: AnimationTimelineInstruction[] = [];\n    context.timelines.forEach(timeline => {\n      // this checks to see if an actual animation happened\n      if (timeline.hasStyling()) {\n        timelineInstructions.push(timeline.buildKeyframes());\n      }\n    });\n\n    if (timelineInstructions.length == 0) {\n      timelineInstructions.push(createTimelineInstruction([], 0, 0, ''));\n    }\n    return timelineInstructions;\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitState(ast: meta.AnimationStateMetadata, context: any): any {\n    // these values are not visited in this AST\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitTransition(ast: meta.AnimationTransitionMetadata, context: any): any {\n    // these values are not visited in this AST\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitSequence(ast: meta.AnimationSequenceMetadata, context: AnimationTimelineContext) {\n    const /** @type {?} */ subContextCount = context.subContextCount;\n    if (context.previousNode.type == meta.AnimationMetadataType.Style) {\n      context.currentTimeline.forwardFrame();\n      context.currentTimeline.snapshotCurrentStyles();\n    }\n\n    ast.steps.forEach(s => visitAnimationNode(this, s, context));\n\n    // this means that some animation function within the sequence\n    // ended up creating a sub timeline (which means the current\n    // timeline cannot overlap with the contents of the sequence)\n    if (context.subContextCount > subContextCount) {\n      context.transformIntoNewTimeline();\n    }\n\n    context.previousNode = ast;\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitGroup(ast: meta.AnimationGroupMetadata, context: AnimationTimelineContext) {\n    const /** @type {?} */ innerTimelines: TimelineBuilder[] = [];\n    let /** @type {?} */ furthestTime = context.currentTimeline.currentTime;\n    ast.steps.forEach(s => {\n      const /** @type {?} */ innerContext = context.createSubContext();\n      visitAnimationNode(this, s, innerContext);\n      furthestTime = Math.max(furthestTime, innerContext.currentTimeline.currentTime);\n      innerTimelines.push(innerContext.currentTimeline);\n    });\n\n    // this operation is run after the AST loop because otherwise\n    // if the parent timeline's collected styles were updated then\n    // it would pass in invalid data into the new-to-be forked items\n    innerTimelines.forEach(\n        timeline => context.currentTimeline.mergeTimelineCollectedStyles(timeline));\n    context.transformIntoNewTimeline(furthestTime);\n    context.previousNode = ast;\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitAnimate(ast: meta.AnimationAnimateMetadata, context: AnimationTimelineContext) {\n    const /** @type {?} */ timings = ast.timings.hasOwnProperty('duration') ? /** @type {?} */((\n        <meta.AnimateTimings>ast.timings)) :\n        parseTimeExpression( /** @type {?} */((<string|number>ast.timings)), context.errors);\n    context.currentAnimateTimings = timings;\n\n    if (timings.delay) {\n      context.incrementTime(timings.delay);\n      context.currentTimeline.snapshotCurrentStyles();\n    }\n\n    const /** @type {?} */ astType = ast.styles ? ast.styles.type : -1;\n    if (astType == meta.AnimationMetadataType.KeyframeSequence) {\n      this.visitKeyframeSequence( /** @type {?} */((<meta.AnimationKeyframesSequenceMetadata>ast.styles)), context);\n    } else {\n      context.incrementTime(timings.duration);\n      if (astType == meta.AnimationMetadataType.Style) {\n        this.visitStyle( /** @type {?} */((<meta.AnimationStyleMetadata>ast.styles)), context);\n      }\n    }\n\n    context.currentAnimateTimings = null;\n    context.previousNode = ast;\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitStyle(ast: meta.AnimationStyleMetadata, context: AnimationTimelineContext) {\n    // this is a special case when a style() call is issued directly after\n    // a call to animate(). If the clock is not forwarded by one frame then\n    // the style() calls will be merged into the previous animate() call\n    // which is incorrect.\n    if (!context.currentAnimateTimings &&\n        context.previousNode.type == meta.AnimationMetadataType.Animate) {\n      context.currentTimeline.forwardFrame();\n    }\n\n    const /** @type {?} */ normalizedStyles = normalizeStyles(new AnimationStyles(ast.styles));\n    const /** @type {?} */ easing = context.currentAnimateTimings && context.currentAnimateTimings.easing;\n    if (easing) {\n      normalizedStyles['easing'] = easing;\n    }\n\n    context.currentTimeline.setStyles(normalizedStyles);\n    context.previousNode = ast;\n  }\n/**\n * @param {?} ast\n * @param {?} context\n * @return {?}\n */\nvisitKeyframeSequence(\n      ast: meta.AnimationKeyframesSequenceMetadata, context: AnimationTimelineContext) {\n    const /** @type {?} */ MAX_KEYFRAME_OFFSET = 1;\n    const /** @type {?} */ limit = ast.steps.length - 1;\n    const /** @type {?} */ firstKeyframe = ast.steps[0];\n\n    let /** @type {?} */ offsetGap = 0;\n    const /** @type {?} */ containsOffsets = firstKeyframe.styles.find(styles => styles['offset'] >= 0);\n    if (!containsOffsets) {\n      offsetGap = MAX_KEYFRAME_OFFSET / limit;\n    }\n\n    const /** @type {?} */ startTime = context.currentTimeline.duration;\n    const /** @type {?} */ duration = context.currentAnimateTimings.duration;\n    const /** @type {?} */ innerContext = context.createSubContext();\n    const /** @type {?} */ innerTimeline = innerContext.currentTimeline;\n    innerTimeline.easing = context.currentAnimateTimings.easing;\n\n    ast.steps.forEach((step: meta.AnimationStyleMetadata, i: number) => {\n      const /** @type {?} */ normalizedStyles = normalizeStyles(new AnimationStyles(step.styles));\n      const /** @type {?} */ offset = containsOffsets ? /** @type {?} */(( <number>normalizedStyles['offset'])) :\n                                       (i == limit ? MAX_KEYFRAME_OFFSET : i * offsetGap);\n      innerTimeline.forwardTime(offset * duration);\n      innerTimeline.setStyles(normalizedStyles);\n    });\n\n    // this will ensure that the parent timeline gets all the styles from\n    // the child even if the new timeline below is not used\n    context.currentTimeline.mergeTimelineCollectedStyles(innerTimeline);\n\n    // we do this because the window between this timeline and the sub timeline\n    // should ensure that the styles within are exactly the same as they were before\n    context.transformIntoNewTimeline(startTime + duration);\n    context.previousNode = ast;\n  }\n}\nexport class TimelineBuilder {\npublic duration: number = 0;\npublic easing: string = '';\nprivate _currentKeyframe: StyleData;\nprivate _keyframes = new Map<number, StyleData>();\nprivate _styleSummary: {[prop: string]: StyleAtTime} = {};\nprivate _localTimelineStyles: StyleData;\nprivate _backFill: StyleData = {};\n/**\n * @param {?} startTime\n * @param {?=} _globalTimelineStyles\n */\nconstructor(public startTime: number,\nprivate _globalTimelineStyles: StyleData = null) {\n    this._localTimelineStyles = Object.create(this._backFill, {});\n    if (!this._globalTimelineStyles) {\n      this._globalTimelineStyles = this._localTimelineStyles;\n    }\n    this._loadKeyframe();\n  }\n/**\n * @return {?}\n */\nhasStyling(): boolean { return this._keyframes.size > 1; }\n/**\n * @return {?}\n */\nget currentTime() { return this.startTime + this.duration; }\n/**\n * @param {?=} currentTime\n * @return {?}\n */\nfork(currentTime = 0): TimelineBuilder {\n    return new TimelineBuilder(currentTime || this.currentTime, this._globalTimelineStyles);\n  }\n/**\n * @return {?}\n */\nprivate _loadKeyframe() {\n    this._currentKeyframe = this._keyframes.get(this.duration);\n    if (!this._currentKeyframe) {\n      this._currentKeyframe = Object.create(this._backFill, {});\n      this._keyframes.set(this.duration, this._currentKeyframe);\n    }\n  }\n/**\n * @return {?}\n */\nforwardFrame() {\n    this.duration++;\n    this._loadKeyframe();\n  }\n/**\n * @param {?} time\n * @return {?}\n */\nforwardTime(time: number) {\n    this.duration = time;\n    this._loadKeyframe();\n  }\n/**\n * @param {?} prop\n * @param {?} value\n * @return {?}\n */\nprivate _updateStyle(prop: string, value: string|number) {\n    if (prop != 'easing') {\n      this._localTimelineStyles[prop] = value;\n      this._globalTimelineStyles[prop] = value;\n      this._styleSummary[prop] = {time: this.currentTime, value};\n    }\n  }\n/**\n * @param {?} styles\n * @return {?}\n */\nsetStyles(styles: StyleData) {\n    Object.keys(styles).forEach(prop => {\n      if (prop !== 'offset') {\n        const /** @type {?} */ val = styles[prop];\n        this._currentKeyframe[prop] = val;\n        if (prop !== 'easing' && !this._localTimelineStyles[prop]) {\n          this._backFill[prop] = this._globalTimelineStyles[prop] || meta.AUTO_STYLE;\n        }\n        this._updateStyle(prop, val);\n      }\n    });\n    Object.keys(this._localTimelineStyles).forEach(prop => {\n      if (!this._currentKeyframe.hasOwnProperty(prop)) {\n        this._currentKeyframe[prop] = this._localTimelineStyles[prop];\n      }\n    });\n  }\n/**\n * @return {?}\n */\nsnapshotCurrentStyles() { copyStyles(this._localTimelineStyles, false, this._currentKeyframe); }\n/**\n * @return {?}\n */\ngetFinalKeyframe() { return this._keyframes.get(this.duration); }\n/**\n * @return {?}\n */\nget properties() {\n    const /** @type {?} */ properties: string[] = [];\n    for (let /** @type {?} */ prop in this._currentKeyframe) {\n      properties.push(prop);\n    }\n    return properties;\n  }\n/**\n * @param {?} timeline\n * @return {?}\n */\nmergeTimelineCollectedStyles(timeline: TimelineBuilder) {\n    Object.keys(timeline._styleSummary).forEach(prop => {\n      const /** @type {?} */ details0 = this._styleSummary[prop];\n      const /** @type {?} */ details1 = timeline._styleSummary[prop];\n      if (!details0 || details1.time > details0.time) {\n        this._updateStyle(prop, details1.value);\n      }\n    });\n  }\n/**\n * @return {?}\n */\nbuildKeyframes(): AnimationTimelineInstruction {\n    const /** @type {?} */ finalKeyframes: StyleData[] = [];\n    // special case for when there are only start/destination\n    // styles but no actual animation animate steps...\n    if (this.duration == 0) {\n      const /** @type {?} */ targetKeyframe = this.getFinalKeyframe();\n\n      const /** @type {?} */ firstKeyframe = copyStyles(targetKeyframe, true);\n      firstKeyframe['offset'] = 0;\n      finalKeyframes.push(firstKeyframe);\n\n      const /** @type {?} */ lastKeyframe = copyStyles(targetKeyframe, true);\n      lastKeyframe['offset'] = 1;\n      finalKeyframes.push(lastKeyframe);\n    } else {\n      this._keyframes.forEach((keyframe, time) => {\n        const /** @type {?} */ finalKeyframe = copyStyles(keyframe, true);\n        finalKeyframe['offset'] = time / this.duration;\n        finalKeyframes.push(finalKeyframe);\n      });\n    }\n\n    return createTimelineInstruction(finalKeyframes, this.duration, this.startTime, this.easing);\n  }\n}\n\nfunction TimelineBuilder_tsickle_Closure_declarations() {\n/** @type {?} */\nTimelineBuilder.prototype.duration;\n/** @type {?} */\nTimelineBuilder.prototype.easing;\n/** @type {?} */\nTimelineBuilder.prototype._currentKeyframe;\n/** @type {?} */\nTimelineBuilder.prototype._keyframes;\n/** @type {?} */\nTimelineBuilder.prototype._styleSummary;\n/** @type {?} */\nTimelineBuilder.prototype._localTimelineStyles;\n/** @type {?} */\nTimelineBuilder.prototype._backFill;\n/** @type {?} */\nTimelineBuilder.prototype.startTime;\n/** @type {?} */\nTimelineBuilder.prototype._globalTimelineStyles;\n}\n\n"]}