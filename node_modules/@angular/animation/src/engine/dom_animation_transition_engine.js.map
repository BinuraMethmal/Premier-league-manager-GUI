{"version":3,"sources":["../../../../../modules/@angular/animation/src/engine/dom_animation_transition_engine.ts"],"names":[],"mappings":"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","file":"dom_animation_transition_engine.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {AnimationPlayer, Injectable} from '@angular/core';\nimport {StyleData} from '../common/style_data';\nimport {AnimationTimelineInstruction} from '../dsl/animation_timeline_instruction';\nimport {AnimationTransitionInstruction} from '../dsl/animation_transition_instruction';\nimport {AnimationStyleNormalizer} from '../dsl/style_normalization/animation_style_normalizer';\nimport {AnimationGroupPlayer, NoOpAnimationPlayer, TransitionEngine} from '../private_import_core';\n\nimport {AnimationDriver} from './animation_driver';\nimport {AnimationEngineInstruction, AnimationTransitionInstructionType} from './animation_engine_instruction';\n\nexport declare type AnimationPlayerTuple = {\n  element: any; player: AnimationPlayer;\n};\nexport class DomAnimationTransitionEngine extends TransitionEngine {\nprivate _flaggedInserts = new Set<any>();\nprivate _queuedRemovals: any[] = [];\nprivate _queuedAnimations: AnimationPlayerTuple[] = [];\nprivate _activeElementAnimations = new Map<any, AnimationPlayer[]>();\nprivate _activeTransitionAnimations = new Map<any, {[triggerName: string]: AnimationPlayer}>();\n/**\n * @param {?} _driver\n * @param {?} _normalizer\n */\nconstructor(private _driver: AnimationDriver,\nprivate _normalizer: AnimationStyleNormalizer) {\n    super();\n  }\n/**\n * @param {?} container\n * @param {?} element\n * @return {?}\n */\ninsertNode(container: any, element: any) {\n    container.appendChild(element);\n    this._flaggedInserts.add(element);\n  }\n/**\n * @param {?} element\n * @return {?}\n */\nremoveNode(element: any) { this._queuedRemovals.push(element); }\n/**\n * @param {?} element\n * @param {?} instructions\n * @return {?}\n */\nprocess(element: any, instructions: AnimationEngineInstruction[]): AnimationPlayer {\n    const /** @type {?} */ players = instructions.map(instruction => {\n      if (instruction.type == AnimationTransitionInstructionType.TransitionAnimation) {\n        return this._handleTransitionAnimation(\n            element, /** @type {?} */(( <AnimationTransitionInstruction>instruction)));\n      }\n      if (instruction.type == AnimationTransitionInstructionType.TimelineAnimation) {\n        return this._handleTimelineAnimation(\n            element, /** @type {?} */(( <AnimationTimelineInstruction>instruction)), []);\n      }\n      return new NoOpAnimationPlayer();\n    });\n    return optimizeGroupPlayer(players);\n  }\n/**\n * @param {?} element\n * @param {?} instruction\n * @return {?}\n */\nprivate _handleTransitionAnimation(element: any, instruction: AnimationTransitionInstruction):\n      AnimationPlayer {\n    const /** @type {?} */ triggerName = instruction.triggerName;\n    const /** @type {?} */ elmTransitionMap = getOrSetAsInMap(this._activeTransitionAnimations, element, {});\n\n    let /** @type {?} */ previousPlayers: AnimationPlayer[];\n    if (instruction.isRemovalTransition) {\n      // we make a copy of the array because the actual source array is modified\n      // each time a player is finished/destroyed (the forEach loop would fail otherwise)\n      previousPlayers = copyArray(this._activeElementAnimations.get(element));\n    } else {\n      previousPlayers = [];\n      const /** @type {?} */ existingPlayer = elmTransitionMap[triggerName];\n      if (existingPlayer) {\n        previousPlayers.push(existingPlayer);\n      }\n    }\n\n    // it's important to do this step before destroying the players\n    // so that the onDone callback below won't fire before this\n    eraseStyles(element, instruction.fromStyles);\n\n    // we first run this so that the previous animation player\n    // data can be passed into the successive animation players\n    const /** @type {?} */ players = instruction.timelines.map(\n        timelineInstruction => this._buildPlayer(element, timelineInstruction, previousPlayers));\n\n    previousPlayers.forEach(previousPlayer => previousPlayer.destroy());\n\n    const /** @type {?} */ player = optimizeGroupPlayer(players);\n    player.onDone(() => {\n      player.destroy();\n      const /** @type {?} */ elmTransitionMap = this._activeTransitionAnimations.get(element);\n      if (elmTransitionMap) {\n        delete elmTransitionMap[triggerName];\n        if (Object.keys(elmTransitionMap).length == 0) {\n          this._activeTransitionAnimations.delete(element);\n        }\n      }\n      deleteFromArrayMap(this._activeElementAnimations, element, player);\n      setStyles(element, instruction.toStyles);\n    });\n\n    this._queuePlayer(element, player);\n    elmTransitionMap[triggerName] = player;\n\n    return player;\n  }\n/**\n * @param {?} element\n * @param {?} instruction\n * @param {?} previousPlayers\n * @return {?}\n */\nprivate _handleTimelineAnimation(\n      element: any, instruction: AnimationTimelineInstruction,\n      previousPlayers: AnimationPlayer[]): AnimationPlayer {\n    const /** @type {?} */ player = this._buildPlayer(element, instruction, previousPlayers);\n    player.onDestroy(() => { deleteFromArrayMap(this._activeElementAnimations, element, player); });\n    this._queuePlayer(element, player);\n    return player;\n  }\n/**\n * @param {?} element\n * @param {?} instruction\n * @param {?} previousPlayers\n * @return {?}\n */\nprivate _buildPlayer(\n      element: any, instruction: AnimationTimelineInstruction,\n      previousPlayers: AnimationPlayer[]): AnimationPlayer {\n    return this._driver.animate(\n        element, this._normalizeKeyframes(instruction.keyframes), instruction.duration,\n        instruction.delay, instruction.easing, previousPlayers);\n  }\n/**\n * @param {?} keyframes\n * @return {?}\n */\nprivate _normalizeKeyframes(keyframes: StyleData[]): StyleData[] {\n    const /** @type {?} */ errors: string[] = [];\n    const /** @type {?} */ normalizedKeyframes: StyleData[] = [];\n    keyframes.forEach(kf => {\n      const /** @type {?} */ normalizedKeyframe: StyleData = {};\n      Object.keys(kf).forEach(prop => {\n        let /** @type {?} */ normalizedProp = prop;\n        let /** @type {?} */ normalizedValue = kf[prop];\n        if (prop != 'offset') {\n          normalizedProp = this._normalizer.normalizePropertyName(prop, errors);\n          normalizedValue =\n              this._normalizer.normalizeStyleValue(prop, normalizedProp, kf[prop], errors);\n        }\n        normalizedKeyframe[normalizedProp] = normalizedValue;\n      });\n      normalizedKeyframes.push(normalizedKeyframe);\n    });\n    if (errors.length) {\n      const /** @type {?} */ LINE_START = '\\n - ';\n      throw new Error(\n          `Unable to animate due to the following errors:${LINE_START}${errors.join(LINE_START)}`);\n    }\n    return normalizedKeyframes;\n  }\n/**\n * @param {?} element\n * @param {?} player\n * @return {?}\n */\nprivate _queuePlayer(element: any, player: AnimationPlayer) {\n    const /** @type {?} */ tuple = /** @type {?} */(( <AnimationPlayerTuple>{element, player}));\n    this._queuedAnimations.push(tuple);\n    player.init();\n\n    const /** @type {?} */ elementAnimations = getOrSetAsInMap(this._activeElementAnimations, element, []);\n    elementAnimations.push(player);\n  }\n/**\n * @return {?}\n */\ntriggerAnimations() {\n    while (this._queuedAnimations.length) {\n      const {player, element} = this._queuedAnimations.shift();\n      // in the event that an animation throws an error then we do\n      // not want to re-run animations on any previous animations\n      // if they have already been kicked off beforehand\n      if (!player.hasStarted()) {\n        player.play();\n      }\n    }\n\n    this._queuedRemovals.forEach(element => {\n      if (this._flaggedInserts.has(element)) return;\n\n      let /** @type {?} */ parent = element;\n      let /** @type {?} */ players: AnimationPlayer[];\n      while (parent = parent.parentNode) {\n        const /** @type {?} */ match = this._activeElementAnimations.get(parent);\n        if (match) {\n          players = match;\n          break;\n        }\n      }\n      if (players) {\n        optimizeGroupPlayer(players).onDone(() => remove(element));\n      } else {\n        if (element.parentNode) {\n          remove(element);\n        }\n      }\n    });\n\n    this._queuedRemovals = [];\n    this._flaggedInserts.clear();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: AnimationDriver, },\n{type: AnimationStyleNormalizer, },\n];\n}\n\nfunction DomAnimationTransitionEngine_tsickle_Closure_declarations() {\n/** @type {?} */\nDomAnimationTransitionEngine.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDomAnimationTransitionEngine.ctorParameters;\n/** @type {?} */\nDomAnimationTransitionEngine.prototype._flaggedInserts;\n/** @type {?} */\nDomAnimationTransitionEngine.prototype._queuedRemovals;\n/** @type {?} */\nDomAnimationTransitionEngine.prototype._queuedAnimations;\n/** @type {?} */\nDomAnimationTransitionEngine.prototype._activeElementAnimations;\n/** @type {?} */\nDomAnimationTransitionEngine.prototype._activeTransitionAnimations;\n/** @type {?} */\nDomAnimationTransitionEngine.prototype._driver;\n/** @type {?} */\nDomAnimationTransitionEngine.prototype._normalizer;\n}\n\n/**\n * @param {?} map\n * @param {?} key\n * @param {?} defaultValue\n * @return {?}\n */\nfunction getOrSetAsInMap(map: Map<any, any>, key: any, defaultValue: any) {\n  let /** @type {?} */ value = map.get(key);\n  if (!value) {\n    map.set(key, value = defaultValue);\n  }\n  return value;\n}\n/**\n * @param {?} map\n * @param {?} key\n * @param {?} value\n * @return {?}\n */\nfunction deleteFromArrayMap(map: Map<any, any[]>, key: any, value: any) {\n  let /** @type {?} */ arr = map.get(key);\n  if (arr) {\n    const /** @type {?} */ index = arr.indexOf(value);\n    if (index >= 0) {\n      arr.splice(index, 1);\n      if (arr.length == 0) {\n        map.delete(key);\n      }\n    }\n  }\n}\n/**\n * @param {?} element\n * @param {?} styles\n * @return {?}\n */\nfunction setStyles(element: any, styles: StyleData) {\n  Object.keys(styles).forEach(prop => { element.style[prop] = styles[prop]; });\n}\n/**\n * @param {?} element\n * @param {?} styles\n * @return {?}\n */\nfunction eraseStyles(element: any, styles: StyleData) {\n  Object.keys(styles).forEach(prop => {\n    // IE requires '' instead of null\n    // see https://github.com/angular/angular/issues/7916\n    element.style[prop] = '';\n  });\n}\n/**\n * @param {?} players\n * @return {?}\n */\nfunction optimizeGroupPlayer(players: AnimationPlayer[]): AnimationPlayer {\n  return players.length == 1 ? players[0] : new AnimationGroupPlayer(players);\n}\n/**\n * @param {?} source\n * @return {?}\n */\nfunction copyArray(source: any[]): any[] {\n  return source ? source.splice(0) : [];\n}\n/**\n * @param {?} element\n * @return {?}\n */\nfunction remove(element: any) {\n  element.parentNode.removeChild(element);\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}